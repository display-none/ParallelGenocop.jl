@everywhere using ParallelGenocop
@everywhere @Logging.configure(level=INFO)


function test()
###
println("finnis - netlib lp")


@everywhere begin

function loosen_it(plus_minus, parameter, vector)
	result = similar(vector)
	for i=1:length(vector)
		# if abs(vector[i]) < 1
			result[i] = plus_minus(vector[i], parameter)
		# else
		# 	result[i] = plus_minus(vector[i], abs(vector[i])*parameter)
		# end
	end
	return result
end

blas_set_num_threads(16)

lower_bounds = Float64[3084.099854,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91.,61.,61.,23.,17.,17.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248.21,150.,50.,126.78,70.,30.,61.21,30.,0,0,0,0,38.95,20.,10.,24.79,12.,6.,43.24,22.,11.,235.17,118.,59.,52.4,26.,13.,0,0,0,0,0,0,0,0,0,0,0,0,223.18,218.49,205.62,30.689987,15.,7.5,61.37,30.,15.,0,0,0,76.63,38.,19.,16.63,8.,4.,0,0,0,0,6.3,4.9,4.2,4.,2.,1.,0,0,0,34.019989,17.,8.5,157.73,80.,40.,26.34,13.,6.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8.32,0,0,0,0,0,754.629883,728.629883,702.629883,0,0,0,0,0,555.,229.,153.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1457.,0,0,3640.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9.536,4.392,.622,35.288,34.874,33.635986,0,0,1.875,12.355,14.817,0,0,3.109,0,3.727,3.727,2.906,2.,5.112,7.592,0,0,0,0,0,0,0,1.3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
upper_bounds = Float64[3084.099854,3084.099854,3039.,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,28940.,Inf,Inf,Inf,91.,61.,61.,23.,17.,17.,Inf,Inf,Inf,.1,.1,.1,12058.,Inf,Inf,Inf,Inf,Inf,Inf,.1,Inf,Inf,Inf,.1,Inf,Inf,Inf,1.5,Inf,Inf,Inf,.0001,Inf,Inf,Inf,.0001,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,.0001,.0001,.0001,.0001,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,.001,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,.29,.58,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,223.18,218.49,205.62,30.689987,Inf,Inf,61.37,Inf,Inf,Inf,Inf,Inf,76.63,Inf,Inf,16.63,Inf,Inf,Inf,Inf,Inf,Inf,6.3,4.9,4.2,4.,Inf,Inf,Inf,Inf,Inf,34.019989,Inf,Inf,157.73,Inf,Inf,26.34,Inf,Inf,.09,.18,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,8.32,Inf,Inf,Inf,Inf,Inf,754.629883,728.629883,702.629883,Inf,Inf,Inf,Inf,Inf,555.,229.,153.,115.,384.,458.,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,1457.,1840.,2060.,3640.,4967.,4290.,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,9.536,4.392,.622,35.288,34.874,33.635986,Inf,Inf,Inf,12.355,14.817,Inf,Inf,Inf,Inf,3.727,3.727,2.906,2.,5.112,7.592,1.686,1.686,1.686,.005,1.,Inf,3.,1.3,1.301,1.301,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]

equalities = readdlm("finnis_eq", Float64)
equalities_right = Float64[0,12.355,3.487,3.727,2.,1.686,1.,555.,0,0,4088.,728.,445.,0,8.303,2.838,3.727,2.,1.686,0,1.,229.,0,0,3270.,582.,356.,0,7.765,2.838,2.906,2.,1.686,0,0,0,1.,0,0,153.,0,0,2453.,437.,267.,0,0]

inequalities = readdlm("finnis_ineq", Float64)
inequalities_right = Float64[-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,248.21,126.78,61.21,38.95,24.79,43.24,235.17,52.4,0,0,30.689987,61.37,85.93,76.63,16.63,4.,65.64,34.019989,157.73,26.34,0,0,0,150.,70.,30.,20.,12.,22.,118.,26.,0,0,0,0,0,15.,30.,43.,38.,8.,0,0,2.,32.,17.,80.,13.,0,0,0,0,50.,30.,0,10.,6.,11.,59.,13.,0,0,0,0,0,7.5,15.,21.,19.,4.,0,0,1.,16.,8.5,40.,6.5,0,0,0,0,0,.01,0,0,-332.829834,-826.959961,-436.189941,-616.079834,-617.72998,-277.599854,-287.72998,-417.99,-1161.799805,-327.7,-328.219971,-827.689941,-397.099854,-626.849854,-606.099854,-268.7,-277.139893,-413.799805,-1200.0,-338.5,-291.689941,-855.269775,-376.829834,-634.919922,-576.839844,-264.799805,-264.829834,-418.579834,-1201.599854,-358.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-64.659988,-24.25,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

param = 2.0
lower_bounds = loosen_it(-, param, lower_bounds)
upper_bounds = loosen_it(+, param, upper_bounds)
inequalities_right = loosen_it(+, param, inequalities_right)

starting_point = Float64[3084.099854, 0, 0, 0, 1726.528768, 3164.484825, 0, 0, 0, 2019.165349, 7681.848915, 5548.181502, 0, 0, 0, 28940.0, 25300.0, 25300.0, 0, 91.0, 61.0, 61.0, 23.0, 17.0, 17.0, 908.885652, 2197.54541, 2210.78975, 0, 0, 0, 12058.0, 10601.0, 10601.0, 0, 1673.708068, 2613.682008, 79.218321, 0, 0, 0, 0, 0.1, 0, 0, 0, 1.5, 2.846043, 3.390866, 0, 0.0001, 0, 0, 0, 0.0001, 0.0001, 0, 0, 25.481001, 15.103968, 57.367153, 0, 6.514, 0, 13.44085, 0, 0, 0, 0, 0, 0, 3.112, 2.48, 0, 0, 0, 0.0001, 0.0001, 0.0001, 0.0001, 0.3, 0, 0.001, 0, 0, 0, 0, 0, 0, 0, 458.0, 0, 119.639585, 0, 1571.165349, 2840.683566, 0, 0, 2951.650501, 0, 0, 0, 0, 0, 0.001, 836.623743, 0, 0, 296.829834, 0, 0, 0, 0, 0, 272.219844, 0, 0, 0, 0, 0, 0, 0, 0, 272.000418, 0, 0, 32.294534, 0, 0, 0.286624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1587.981619, 0, 0, 215.099805, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 206.927834, 0, 0, 0, 0, 0, 0.09, 0, 0, 57.930301, 0, 0, 0, 0, 0, 0, 0, 0, 332.829834, 328.219971, 291.689941, 826.959961, 827.689941, 855.269775, 1084.833743, 150.0, 50.0, 126.78, 217.099854, 326.829834, 61.21, 30.0, 0, 616.079834, 626.849854, 634.919922, 38.95, 20.0, 282.219844, 24.79, 12.0, 6.0, 43.24, 22.0, 11.0, 507.170418, 307.32323, 59.0, 84.694534, 26.0, 13.0, 0.286624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223.18, 218.49, 205.62, 30.689987, 15.0, 7.5, 61.37, 30.0, 15.0, 85.979867, 1630.981619, 0, 76.63, 38.0, 234.099805, 16.63, 8.0, 4.0, 0, 0, 0, 0, 6.3, 4.9, 4.2, 4.0, 2.0, 1.0, 7.70969, 3.768, 1.902, 34.019989, 17.0, 8.5, 157.73, 241.281893, 246.927834, 26.34, 13.0, 6.5, 0.09, 0, 0, 57.930301, 0, 0, 0, 0, 0, 0, 0, 0, 417.99, 413.799805, 418.579834, 8.32, 0, 0, 398.849922, 471.370117, 498.969971, 754.629883, 728.629883, 702.629883, 327.7, 338.5, 358.9, 0, 0, 555.0, 229.0, 153.0, 0, 0, 458.0, 0, 119.639585, 119.639585, 5659.165349, 7681.848915, 6864.848915, 728.0, 3533.650501, 3388.650501, 445.0, 356.0, 267.0, 0, 1300.793631, 0, 0, 81.914779, 589.357357, 17.862885, 0, 0, 0, 0, 0, 0, 0, 0, 64.748244, 0, 0, 0, 15.641926, 0, 0, 0, 0, 0, 0, 0, 0, 2603.216061, 0, 0, 1457.0, 0, 0, 3640.0, 0, 0, 0.001, 0, 0, 499.5, 206.1, 137.7, 0, 0, 412.2, 0, 119.639585, 0, 5659.165349, 7681.848915, 5548.181502, 0, 3533.650501, 895.75532, 31.877225, 0, 0, 0, 0, 42.133862, 0, 0, 23.841164, 23.841169, 71.523493, 3.376413, 3.376413, 10.129238, 0, 178.190673, 0, 193.709656, 193.709725, 581.129052, 186.833035, 186.833102, 560.499187, 54.589332, 0, 0, 0, 0, 65.467433, 63.090334, 0, 0, 0, 0, 23.523643, 19.995851, 19.995858, 59.987548, 15.591076, 15.591082, 46.773227, 10.730266, 0, 32.190796, 27.42656, 27.42657, 82.279675, 0, 0, 47.918297, 9.536, 4.392, 0.622, 35.288, 34.874, 33.635986, 25.481001, 40.58497, 97.952123, 12.355, 14.817, 14.279, 16.92785, 16.27885, 16.27885, 3.727, 3.727, 2.906, 2.0, 5.112, 7.592, 1.686, 1.686, 1.686, 0.0001, 0.0002, 0.0001, 0.0001, 1.3, 1.3, 1.301, 4.815279, 33.646889, 111.293559, 4.815279, 0, 0, 0, 4e-06, 0, 0, 0, 3e-05, 0, 1e-06, 0, 0, 0, 4e-06, 98.004621, 11.582151, 120.947746, 98.004621, 6.236524, 0, 0, 3.5e-05, 0, 0, 0, 0.000229, 0, 3.4e-05, 0, 0, 0, 0.000221, 28.388282, 24.689181, 0, 5.99325, 37.716035, 0, 85.817649, 64.269982, 109.947149, 51.782231, 21.977796, 25.455879, 101.117219, 86.807118, 184.458698, 207.121527, 131.765537, 133.973804, 6.238756, 43.593468, 0, 0, 14.827763, 0, 40.215679, 52.280407, 126.009154, 40.215679, 28.150981, 49.817591, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86.280204, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19.995851, 19.995858, 36.463906, 0, 0, 0, 0, 0, 0, 0, 10.73027, 0, 0, 0, 0, 40.73209, 40.732105, 74.277964, 2.021984, 1.245118, 4.118463, 2.021984, 0.670448, 1.628229, 2.021984, 1.245118, 4.118463, 2.021984, 0.670448, 1.628229, 0, 0, 0, 0, 0, 0, 8.8e-05, 0.000115, 0.000312, 8.8e-05, 6.2e-05, 0.000123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.000211, 0.000275, 0.000909, 0.000211, 0.000148, 0.000359, 0, 0, 0, 0, 0, 0, 0, 0, 0]

eval_func = function(X::Vector{Float64})
                return 10.330608*X[1]+9.170958*X[2]+7.93182*X[3]+16.167389*X[4]+13.355014*X[5]+10.93149*X[6]-16.167389*X[7]-13.355014*X[8]-10.93149*X[9]+27.995941*X[10]+22.001038*X[11]+17.248093*X[12]-27.995941*X[13]-22.001038*X[14]-17.248093*X[15]+19.886414*X[26]+18.295593*X[27]+16.238586*X[28]-19.886414*X[29]-18.295593*X[30]-16.238586*X[31]+.537191*X[36]+.401422*X[37]+.299967*X[38]+2240.95752*X[59]+1269.021484*X[60]+542.729248*X[61]+2188.71875*X[62]+1239.439453*X[63]+530.077637*X[64]+1783.052734*X[65]+1009.716797*X[66]+431.830811*X[67]+1260.778809*X[68]+713.960449*X[69]+305.343506*X[70]+4029.3042*X[71]+2281.73584*X[72]+975.842285*X[73]+.00001*X[74]+.00001*X[75]+.00001*X[76]+.00001*X[77]+.00001*X[78]+369.621338*X[79]+721.590332*X[80]+814.03125*X[81]+460.973877*X[82]+197.147232*X[83]+2.182532*X[84]+2.932184*X[85]+2.611933*X[89]+1.4791*X[90]+.632575*X[91]+6.203342*X[92]+3.512862*X[93]+1.502365*X[94]+5.800726*X[95]+3.284866*X[96]+1.404856*X[97]+5.273388*X[98]+2.986242*X[99]+1.277142*X[100]+2.109354*X[101]+1.194496*X[102]+.510857*X[103]+1.532571*X[104]+1.870049*X[105]+1.43445*X[106]+.812309*X[107]+.347404*X[108]+1.43445*X[109]+.812309*X[110]+.347404*X[111]+4.944228*X[112]+2.799844*X[113]+1.197424*X[114]+19.863083*X[115]+11.248174*X[116]+4.810567*X[117]+11.053495*X[118]+6.259433*X[119]+2.677005*X[120]+53.349091*X[121]+30.210815*X[122]+12.920424*X[123]+39.374603*X[124]+22.297272*X[125]+9.536002*X[126]+54.491653*X[127]+30.857819*X[128]+13.197139*X[129]+.00001*X[130]+.00001*X[131]+.00001*X[132]+.00001*X[133]+20.4711*X[134]+8.755*X[135]+.00001*X[136]+.00001*X[137]+.00001*X[138]+55.615082*X[139]+31.494003*X[140]+13.469211*X[141]+19.863083*X[142]+11.248174*X[143]+4.810567*X[144]+11.053495*X[145]+6.259433*X[146]+2.677005*X[147]+53.349091*X[148]+30.210815*X[149]+12.920424*X[150]+39.374603*X[151]+22.297272*X[152]+9.536002*X[153]+54.491653*X[154]+30.857819*X[155]+13.197139*X[156]+.00001*X[157]+.00001*X[158]+20.4711*X[159]+8.755*X[160]+17.226379*X[161]+9.755052*X[162]+4.172*X[163]+8.560434*X[164]+4.847649*X[165]+2.073219*X[166]+53.349091*X[167]+30.210815*X[168]+12.920424*X[169]+39.374603*X[170]+22.297272*X[171]+9.536002*X[172]+54.491653*X[173]+30.857819*X[174]+13.197139*X[175]+.00001*X[176]+.00001*X[177]+8.755*X[178]+101.799759*X[179]+57.647705*X[180]+24.654495*X[181]+17.120865*X[182]+9.695297*X[183]+4.146439*X[184]+17.120865*X[185]+9.695297*X[186]+4.146439*X[187]+15.909122*X[194]+11.88827*X[195]+8.88363*X[196]+39.002*X[197]+29.144684*X[198]+21.778656*X[199]+11.053747*X[200]+8.260037*X[201]+6.172396*X[202]+7.231423*X[206]+5.403763*X[207]+4.038016*X[208]+6.869854*X[209]+5.133575*X[210]+3.836116*X[211]+15.416441*X[212]+11.520109*X[213]+8.608518*X[214]+19.469208*X[215]+14.548593*X[216]+10.871583*X[217]+31.92157*X[218]+23.853745*X[219]+17.824951*X[220]+6.947694*X[221]+5.191734*X[222]+11.901143*X[223]+8.862661*X[224]+9.263595*X[225]+6.922315*X[226]+14.772768*X[230]+11.039117*X[231]+8.249092*X[232]+7.231423*X[236]+5.403763*X[237]+4.038016*X[238]+6.869854*X[239]+5.133575*X[240]+3.836116*X[241]+16.528961*X[242]+12.351457*X[243]+9.229751*X[244]+19.469208*X[245]+14.548593*X[246]+10.871583*X[247]+31.92157*X[248]+23.853745*X[249]+17.824951*X[250]+11.901143*X[251]+8.893249*X[252]+9.263595*X[253]+6.922315*X[254]+1.54959*X[258]+1.157948*X[259]+.865289*X[260]+16.528961*X[264]+12.351457*X[265]+9.229751*X[266]+19.469208*X[267]+14.548593*X[268]+10.871583*X[269]+31.92157*X[270]+23.853745*X[271]+17.824951*X[272]+6.947694*X[273]+5.191734*X[274]+6.922315*X[275]+85.948608*X[276]+64.001907*X[277]+47.664902*X[278]+5.475219*X[291]+4.091419*X[292]+3.057354*X[293]+4.961*X[300]+5.710909*X[301]+2.89257*X[324]+2.161505*X[325]+1.615207*X[326]+.619836*X[327]+.46318*X[328]+.346116*X[329]+.619836*X[330]+.46318*X[331]+.346116*X[332]+.619836*X[333]+.46318*X[334]+.346116*X[335]+4.752079*X[336]+3.551044*X[337]+2.653554*X[338]+4.752079*X[339]+3.551044*X[340]+2.653554*X[341]+1.211405*X[357]+1.817107*X[358]+1.586364*X[359]+1.497937*X[360]+1.11935*X[361]+.836446*X[362]+1.497937*X[363]+1.11935*X[364]+.836446*X[365]+1.497937*X[366]+1.11935*X[367]+.836446*X[368]+.365152*X[379]+289.256836*X[425]+216.150574*X[426]+161.520706*X[427]+289.256836*X[428]+216.150574*X[429]+161.520706*X[430]+114.669724*X[431]+85.688248*X[432]+64.031403*X[433]+114.669724*X[434]+85.688248*X[435]+64.031403*X[436]+72.83078*X[437]+54.423615*X[438]+40.668594*X[439]+81.611801*X[440]+60.985336*X[441]+45.5719*X[442]+74.380371*X[443]+55.581573*X[444]+41.53389*X[445]+21.229065*X[449]+15.863641*X[450]+61.723953*X[451]+74.414856*X[452]+71.281189*X[453]+53.265671*X[454]+39.803314*X[455]+5.448*X[456]+5.448*X[457]+5.448*X[458]+5.448*X[459]+5.448*X[460]+5.448*X[461]+4.071078*X[462]+4.071078*X[463]+4.071078*X[464]+4.071078*X[465]+4.071078*X[466]+4.071078*X[467]+3.042154*X[468]+3.042154*X[469]+3.042154*X[470]+3.042154*X[471]+3.042154*X[472]+3.042154*X[473]+4.457562*X[474]+4.457562*X[475]+4.457562*X[476]+4.457562*X[477]+4.457562*X[478]+4.457562*X[479]+3.330964*X[480]+3.330964*X[481]+3.330964*X[482]+3.330964*X[483]+3.330964*X[484]+3.330964*X[485]+2.489097*X[486]+2.489097*X[487]+2.489097*X[488]+2.489097*X[489]+2.489097*X[490]+2.489097*X[491]+5.635665*X[492]+5.635665*X[493]+5.635665*X[494]+5.635665*X[495]+5.635665*X[496]+5.635665*X[497]+4.211314*X[498]+4.211314*X[499]+4.211314*X[500]+4.211314*X[501]+4.211314*X[502]+4.211314*X[503]+3.146947*X[504]+3.146947*X[505]+3.146947*X[506]+3.146947*X[507]+3.146947*X[508]+3.146947*X[509]+22.382751*X[510]+22.382751*X[511]+22.382751*X[512]+22.382751*X[513]+22.382751*X[514]+22.382751*X[515]+16.725754*X[516]+16.725754*X[517]+16.725754*X[518]+16.725754*X[519]+16.725754*X[520]+16.725754*X[521]+12.498495*X[522]+12.498495*X[523]+12.498495*X[524]+12.498495*X[525]+12.498495*X[526]+12.498495*X[527]+4.183896*X[528]+4.183896*X[529]+4.183896*X[530]+4.183896*X[531]+4.183896*X[532]+4.183896*X[533]+3.126463*X[534]+3.126463*X[535]+3.126463*X[536]+3.126463*X[537]+3.126463*X[538]+3.126463*X[539]+2.336281*X[540]+2.336281*X[541]+2.336281*X[542]+2.336281*X[543]+2.336281*X[544]+2.336281*X[545]+1.807856*X[546]+1.807856*X[547]+1.807856*X[548]+1.350941*X[549]+1.350941*X[550]+1.350941*X[551]+1.009503*X[552]+1.009503*X[553]+1.009503*X[554]+1.136366*X[555]+1.136366*X[556]+1.136366*X[557]+.849163*X[558]+.849163*X[559]+.849163*X[560]+.634546*X[561]+.634546*X[562]+.634546*X[563]+41.750214*X[594]+41.750214*X[595]+41.750214*X[596]+41.750214*X[597]+41.750214*X[598]+41.750214*X[599]+3.533263*X[600]+3.533263*X[601]+3.533263*X[602]+3.533263*X[603]+3.533263*X[604]+3.533263*X[605]
            end

operators = Dict{Operator,Integer}(UniformMutation() => 15,
                                BoundaryMutation() => 15,
                                NonUniformMutation() => 15,
                                WholeNonUniformMutation() => 15,
                                ArithmeticalCrossover() => 40,
                                SimpleCrossover() => 40,
                                HeuristicCrossover() => 40)


spec_dummy = GenocopSpecification(eval_func, equalities, equalities_right, inequalities, inequalities_right, lower_bounds, upper_bounds; max_iterations = 3,
                        starting_population_type=single_point_start_pop, minmax = minimization, starting_point = starting_point, epsilon = 1e-3)
end
spec = GenocopSpecification(eval_func, equalities, equalities_right, inequalities, inequalities_right, lower_bounds, upper_bounds; max_iterations = 6000,
                        starting_population_type=single_point_start_pop, operator_mapping=operators, population_size=400, minmax = minimization, starting_point = starting_point, epsilon = 0.0)

#genocop(spec_dummy)
best = @time genocop(spec)
#println("best: $best")
best_eval = eval_func(best)
println("best fitness: $best_eval")


# @profile genocop(spec_dummy)

# Profile.clear()
# Profile.init(10^7, 0.001)
# @profile (genocop(spec))
# using ProfileView
# ProfileView.view()

# readline(STDIN)


print("\n\n\n")

end

test()






