@everywhere using ParallelGenocop
@everywhere @Logging.configure(level=INFO)



function test()
###
println("ganges - netlib lp")


@everywhere begin

function loosen_it(plus_minus, parameter, vector)
	result = similar(vector)
	for i=1:length(vector)
		if abs(vector[i]) < 1
			result[i] = plus_minus(vector[i], parameter)
		else
			result[i] = plus_minus(vector[i], abs(vector[i])*parameter)
		end
	end
	return result
end

blas_set_num_threads(16)

lower_bounds = Float64[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2936.,2936.,2936.,2936.,2936.,0,0,0,0,0,2936.,2936.,0,0,0,0,0,0,0,0,0,0,0,0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
upper_bounds = Float64[Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,566.3,566.3,566.3,566.3,566.3,566.3,566.3,566.3,566.3,566.3,566.3,566.3,141.6,141.6,141.6,141.6,141.6,141.6,141.6,141.6,141.6,141.6,141.6,141.6,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,155.7,155.7,155.7,155.7,155.7,155.7,155.7,155.7,155.7,155.7,155.7,155.7,297.5,297.5,297.5,297.5,297.5,297.5,297.5,297.5,297.5,297.5,297.5,297.5,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,311.5,311.5,311.5,311.5,311.5,311.5,311.5,311.5,311.5,311.5,311.5,311.5,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,283.2,396.4,396.4,396.4,396.4,396.4,396.4,396.4,396.4,396.4,396.4,396.4,396.4,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,5.7,5.7,5.7,5.7,5.7,5.7,5.7,5.7,5.7,5.7,5.7,5.7,56.6,56.6,56.6,56.6,56.6,56.6,56.6,56.6,56.6,56.6,56.6,56.6,85.,85.,85.,85.,85.,85.,85.,85.,85.,85.,85.,85.,260.5,260.5,260.5,260.5,260.5,260.5,260.5,260.5,260.5,260.5,260.5,260.5,90.6,90.6,90.6,90.6,90.6,90.6,90.6,90.6,90.6,90.6,90.6,90.6,424.8,424.8,424.8,424.8,424.8,424.8,424.8,424.8,424.8,424.8,424.8,424.8,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,28.3,1073.789,1073.789,1073.789,1073.789,1073.789,1073.789,1073.789,1073.789,1073.789,1073.789,1073.789,1073.789,572.687,572.687,572.687,572.687,572.687,572.687,572.687,572.687,572.687,572.687,572.687,572.687,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,286.344,2352.941,2352.941,2352.941,2352.941,2352.941,2352.941,2352.941,2352.941,2352.941,2352.941,2352.941,2352.941,1222.467,1222.467,1222.467,1222.467,1222.467,1222.467,1222.467,1222.467,1222.467,1222.467,1222.467,1222.467,688.073,688.073,688.073,688.073,688.073,688.073,688.073,688.073,688.073,688.073,688.073,688.073,10608.,10608.,10608.,10608.,10608.,10608.,10608.,10608.,10608.,10608.,10608.,10608.,2220.,2220.,2220.,2220.,2220.,2220.,2220.,2220.,2220.,2220.,2220.,2220.,60.,60.,60.,60.,60.,60.,60.,60.,60.,60.,60.,60.,120.,120.,120.,120.,120.,120.,120.,120.,120.,120.,120.,120.,1567.,1567.,1567.,1567.,1567.,1567.,1567.,1567.,1567.,1567.,1567.,1567.,6920.,6920.,6920.,6920.,6920.,6920.,6920.,6920.,6920.,6920.,6920.,6920.,6600.,6600.,1900.,1900.,2600.,2600.,50000.,20000.,19000.,19000.,10000.,23000.,40000.,36800.,19000.,20800.,20000.,3100.,20000.,4700.,20000.,10000.,50000.,50000.,23600.,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]

equalities = readdlm("ganges_eq", Float64)
equalities_right = Float64[13587.,10313.,12251.,18072.,43677.,82142.,99999.,99999.,89777.,57037.,26940.,17470.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,680.,2721.,4762.,4762.,680.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,773.,3093.,5414.,5414.,773.,0,0,0,0,0,0,0,1814.,7258.,12701.,12701.,1814.,0,0,0,0,0,0,0,421.,1685.,2949.,2949.,412.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,636.,2546.,4455.,4455.,636.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,654.,641.,629.,703.,851.,1776.,5723.,9029.,5871.,2183.,1110.,789.,1073.,888.,950.,1048.,1912.,5070.,10941.,12668.,9399.,4453.,2134.,1456.,1431.,1036.,1011.,950.,1530.,4749.,16319.,18823.,12224.,6044.,2837.,2023.,0,0,0,0,0,0,0,0,0,0,0,0,194.,127.,90.,67.,37.,246.,2134.,5692.,5520.,1492.,343.,298.,37.,37.,25.,19.,19.,19.,130.,271.,339.,191.,111.,49.,0,127.,0,83.,0,59.,0,44.,0,24.,0,161.,0,1394.,0,3720.,0,3608.,0,975.,0,224.,0,195.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,950.,931.,913.,1005.,1221.,2559.,8271.,13044.,8468.,3145.,1610.,1147.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,950.,931.,913.,1005.,1221.,2559.,8271.,13044.,8468.,3145.,1610.,1147.,62.,49.,37.,25.,12.,86.,752.,1998.,1937.,530.,123.,99.,0,0,0,0,0,0,0,0,0,0,0,0,0,136.,0,123.,0,123.,0,136.,0,173.,0,345.,0,1122.,0,1776.,0,1159.,0,432.,0,222.,0,160.,107.,66.,49.,37.,21.,136.,1184.,3158.,3063.,831.,189.,164.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107.,0,66.,0,49.,0,37.,0,21.,0,136.,0,1184.,0,3158.,0,3063.,0,831.,0,189.,0,164.,0,0,0,0,0,188.,754.,1319.,1319.,188.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107.,0,66.,0,49.,0,37.,0,21.,0,136.,0,1184.,0,3158.,0,3063.,0,831.,0,189.,0,164.,0,0,0,0,0,188.,754.,1319.,1319.,188.,0,0,0,0,0,0,0,188.,754.,1319.,1319.,188.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,432.,0,271.,0,197.,0,148.,0,86.,0,543.,0,4737.,0,12656.,0,12261.,0,3330.,0,752.,0,654.,0,0,0,0,0,471.,1884.,3297.,3297.,471.,0,0,0,0,0,0,0,471.,1884.,3297.,3297.,471.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160.,160.,154.,173.,204.,432.,1400.,2208.,1431.,530.,271.,191.,160.,160.,154.,173.,204.,432.,1400.,2208.,1431.,530.,271.,191.,37.,37.,25.,19.,19.,19.,130.,271.,339.,191.,111.,49.,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250.53,313.22,375.91,438.37,501.06,0,0,0,0,62.69,125.38,187.84,250.53,313.22,375.91,438.37,501.06,0,0,0,0,62.69,125.38,187.84,75.21,94.04,112.86,131.61,150.43,0,0,0,0,18.82,37.64,56.39,75.21,94.04,112.86,131.61,150.43,0,0,0,0,18.82,37.64,56.39,100.21,125.29,150.36,175.35,200.42,0,0,0,0,25.08,50.15,75.14,68.99,86.26,103.52,120.72,137.99,0,0,0,0,17.26,34.53,51.73,829.58,1037.17,1244.75,1451.58,1659.17,0,0,0,0,207.58,415.17,622.,331.86,414.89,497.93,580.67,663.71,0,0,0,0,83.04,166.08,248.82,717.93,897.57,1077.21,1256.21,1435.86,0,0,0,0,179.64,359.29,538.28,494.84,618.66,742.48,865.86,989.68,0,0,0,0,123.82,247.64,371.02,1295.31,1619.43,1943.55,2266.51,2590.63,0,0,0,0,324.12,648.24,971.19,1252.87,1566.38,1879.88,2192.25,2505.75,0,0,0,0,313.5,627.,939.37,995.46,1244.54,1493.63,1741.82,1990.91,0,0,0,0,249.09,498.18,746.37,497.73,622.27,746.82,870.91,995.46,0,0,0,0,124.54,249.09,373.18,315.3,394.2,473.09,551.71,630.6,0,0,0,0,78.9,157.79,236.41,414.85,518.65,622.46,725.89,829.69,0,0,0,0,103.81,207.61,311.04,331.86,414.89,497.93,580.67,663.71,0,0,0,0,83.04,166.08,248.82,64.33,80.42,96.52,112.56,128.65,0,0,0,0,16.1,32.19,48.23,331.86,414.89,497.93,580.67,663.71,0,0,0,0,83.04,166.08,248.82,97.43,121.82,146.2,170.49,194.87,0,0,0,0,24.38,48.76,73.05,331.86,414.89,497.93,580.67,663.71,0,0,0,0,83.04,166.08,248.82,2645.96,3308.04,3970.13,4629.83,5291.91,0,0,0,0,662.08,1324.17,1983.87,331.86,414.89,497.93,580.67,663.71,0,0,0,0,83.04,166.08,248.82,331.86,414.89,497.93,580.67,663.71,0,0,0,0,83.04,166.08,248.82,1177.66,1472.34,1767.02,2060.64,2355.32,0,0,0,0,294.68,589.36,882.98,0,0,0,0,0,0,0,0,0,0,0,0]

inequalities = readdlm("ganges_ineq", Float64)
inequalities_right = Float64[2255.,2255.,677.,677.,902.,621.,7467.,2987.,6462.,4454.,11659.,11277.,8960.,4480.,2838.,3734.,2987.,2987.,2987.,579.,877.,23816.,2987.,2987.,10600.]

param = 1e-4
lower_bounds = loosen_it(-, param, lower_bounds)
upper_bounds = loosen_it(+, param, upper_bounds)
inequalities_right = loosen_it(+, param, inequalities_right)

starting_point = Float64[30986.09, 30065.9, 35164.74, 44578.31, 75539.15, 107376.0, 189608.0, 247713.0, 212253.0, 95867.84, 43171.69, 33679.24, 17148.56, 19439.68, 22537.83, 26067.94, 31361.09, 25234.0, 89609.0, 147714.0, 122476.0, 38768.15, 16106.31, 16021.4, 19834.03, 22062.46, 25097.92, 28565.57, 33796.03, 25234.0, 89609.0, 147714.0, 122476.0, 38705.46, 18916.93, 18769.56, 18468.95, 20365.04, 23080.18, 26222.71, 31120.85, 25215.0, 89479.0, 147443.0, 122137.0, 38182.14, 18141.29, 17724.8, 16602.81, 18485.43, 20940.11, 23786.89, 27622.56, 20145.0, 78538.0, 134775.0, 112738.0, 33530.68, 15610.36, 15674.13, 15287.94, 16850.8, 18997.73, 21531.9, 25047.82, 19446.0, 75687.0, 129742.0, 107637.0, 32339.92, 14859.85, 14667.01, 13293.11, 15109.88, 17140.73, 19595.32, 22390.15, 14697.0, 59368.0, 110919.0, 95413.0, 26154.84, 11740.68, 12221.26, 11676.8, 13280.45, 15048.18, 17217.81, 19738.52, 13517.0, 52747.0, 96093.0, 80871.0, 22590.72, 10525.44, 10757.07, 8283.61, 9551.64, 10981.73, 12595.08, 14310.15, 6585.0, 28947.0, 57304.0, 51234.0, 14113.09, 6558.17, 7343.52, 7906.31, 9108.44, 10471.64, 12018.37, 13667.55, 6078.0, 26510.0, 52357.0, 46348.0, 13092.19, 6277.38, 7008.11, 2366.29, 2734.71, 3117.14, 3597.14, 4176.57, 2757.0, 9391.0, 15260.0, 11485.0, 3645.43, 2120.86, 2130.86, 985.86, 1055.89, 1126.93, 1283.67, 1514.71, 1776.0, 5723.0, 9029.0, 5871.0, 2266.04, 1276.08, 1037.82, 654.0, 641.0, 629.0, 703.0, 851.0, 1776.0, 5723.0, 9029.0, 5871.0, 2183.0, 1110.0, 789.0, 654.0, 641.0, 629.0, 703.0, 851.0, 1776.0, 5723.0, 9029.0, 5871.0, 2183.0, 1110.0, 789.0, 1073.0, 888.0, 950.0, 1048.0, 1912.0, 5070.0, 10941.0, 12668.0, 9399.0, 4453.0, 2134.0, 1456.0, 1431.0, 1036.0, 1011.0, 950.0, 1530.0, 4749.0, 16319.0, 18823.0, 12224.0, 6044.0, 2837.0, 2023.0, 321.0, 210.0, 149.0, 111.0, 61.0, 407.0, 3528.0, 9412.0, 9128.0, 2467.0, 567.0, 493.0, 321.0, 210.0, 149.0, 111.0, 61.0, 407.0, 3528.0, 9412.0, 9128.0, 2467.0, 567.0, 493.0, 37.0, 37.0, 25.0, 19.0, 19.0, 19.0, 130.0, 271.0, 339.0, 191.0, 111.0, 49.0, 127.0, 83.0, 59.0, 44.0, 24.0, 161.0, 1394.0, 3720.0, 3608.0, 975.0, 224.0, 195.0, 3393.19, 3728.81, 4066.45, 4622.73, 5428.37, 5118.0, 16542.0, 26088.0, 16936.0, 6663.63, 3967.27, 3413.55, 950.0, 931.0, 913.0, 1005.0, 1221.0, 1992.7, 7704.7, 12477.7, 7901.7, 2578.7, 1610.0, 1147.0, 950.0, 931.0, 913.0, 1005.0, 1221.0, 2559.0, 8271.0, 13044.0, 8468.0, 3145.0, 1610.0, 1147.0, 1447.73, 1553.27, 1659.82, 1875.91, 2216.46, 3125.3, 8837.3, 13610.3, 9034.3, 3835.84, 1859.09, 1520.18, 1447.73, 1553.27, 1659.82, 1875.91, 2216.46, 3125.3, 8837.3, 13610.3, 9034.3, 3835.84, 1859.09, 1520.18, 950.0, 931.0, 913.0, 1005.0, 1221.0, 2559.0, 8271.0, 13044.0, 8468.0, 3145.0, 1610.0, 1147.0, 950.0, 931.0, 913.0, 1005.0, 1221.0, 2559.0, 8271.0, 13044.0, 8468.0, 3145.0, 1610.0, 1147.0, 62.0, 49.0, 37.0, 25.0, 12.0, 86.0, 752.0, 1998.0, 1937.0, 530.0, 123.0, 99.0, 136.0, 123.0, 123.0, 136.0, 173.0, 345.0, 1122.0, 1776.0, 1159.0, 432.0, 222.0, 160.0, 136.0, 123.0, 123.0, 136.0, 173.0, 345.0, 1122.0, 1776.0, 1159.0, 432.0, 222.0, 160.0, 107.0, 66.0, 49.0, 37.0, 21.0, 136.0, 1184.0, 3158.0, 3063.0, 831.0, 189.0, 164.0, 5208.16, 5958.84, 6856.57, 7840.56, 8827.27, 3321.0, 17119.0, 37097.0, 34863.0, 9363.72, 3990.44, 4628.43, 107.0, 66.0, 49.0, 37.0, 21.0, 136.0, 1184.0, 3158.0, 3063.0, 771.0, 249.0, 164.0, 107.0, 66.0, 49.0, 37.0, 21.0, 136.0, 1184.0, 3158.0, 3063.0, 771.0, 249.0, 164.0, 4704.97, 5397.53, 6213.12, 7110.33, 8013.91, 3185.0, 15935.0, 33939.0, 31800.0, 8493.58, 3543.17, 4167.38, 107.0, 66.0, 49.0, 37.0, 21.0, 136.0, 1184.0, 3158.0, 3063.0, 831.0, 189.0, 164.0, 107.0, 66.0, 49.0, 37.0, 21.0, 136.0, 1184.0, 3158.0, 3063.0, 831.0, 189.0, 164.0, 4168.68, 4794.82, 5519.99, 6322.17, 7134.33, 2861.0, 13997.0, 29462.0, 27418.0, 7367.16, 3139.33, 3681.51, 4061.68, 4728.82, 5470.99, 6285.17, 7113.33, 2537.0, 12059.0, 24985.0, 23036.0, 6348.16, 2950.33, 3517.51, 432.0, 271.0, 197.0, 148.0, 86.0, 543.0, 4737.0, 12656.0, 12261.0, 3330.0, 752.0, 654.0, 432.0, 271.0, 197.0, 148.0, 86.0, 543.0, 4737.0, 12656.0, 12261.0, 3330.0, 752.0, 654.0, 432.0, 271.0, 197.0, 148.0, 86.0, 543.0, 4737.0, 12656.0, 12261.0, 3330.0, 752.0, 654.0, 432.0, 271.0, 197.0, 148.0, 86.0, 543.0, 4737.0, 12656.0, 12261.0, 3330.0, 752.0, 654.0, 651.86, 734.89, 805.93, 926.67, 1071.71, 1806.0, 6568.0, 11010.0, 9456.0, 2085.04, 708.08, 630.82, 320.0, 320.0, 308.0, 346.0, 408.0, 1335.0, 4684.0, 7713.0, 6159.0, 1531.0, 542.0, 382.0, 320.0, 320.0, 308.0, 346.0, 408.0, 864.0, 2800.0, 4416.0, 2862.0, 1060.0, 542.0, 382.0, 160.0, 160.0, 154.0, 173.0, 204.0, 432.0, 1400.0, 2208.0, 1431.0, 530.0, 271.0, 191.0, 160.0, 160.0, 154.0, 173.0, 204.0, 432.0, 1400.0, 2208.0, 1431.0, 530.0, 271.0, 191.0, 37.0, 37.0, 25.0, 19.0, 19.0, 19.0, 130.0, 271.0, 339.0, 191.0, 111.0, 49.0, 2936.0, 2936.0, 2936.0, 2936.0, 2936.0, 0, 0, 0, 0, 0, 2936.0, 2936.0, 127.0, 83.0, 59.0, 44.0, 24.0, 161.0, 1394.0, 3720.0, 3608.0, 975.0, 224.0, 195.0, 0, 0, 0, 0, 0, 566.3, 566.3, 566.3, 566.3, 566.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136.0, 123.0, 123.0, 136.0, 173.0, 345.0, 1122.0, 1776.0, 1159.0, 432.0, 222.0, 160.0, 107.0, 66.0, 49.0, 37.0, 21.0, 136.0, 1184.0, 3158.0, 3063.0, 771.0, 249.0, 164.0, 107.0, 66.0, 49.0, 37.0, 21.0, 136.0, 1184.0, 3158.0, 3063.0, 831.0, 189.0, 164.0, 432.0, 271.0, 197.0, 148.0, 86.0, 543.0, 4737.0, 12656.0, 12261.0, 3330.0, 752.0, 654.0, 432.0, 271.0, 197.0, 148.0, 86.0, 543.0, 4737.0, 12656.0, 12261.0, 3330.0, 752.0, 654.0, 432.0, 271.0, 197.0, 148.0, 86.0, 543.0, 4737.0, 12656.0, 12261.0, 3330.0, 752.0, 654.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250.53, 313.22, 375.91, 438.37, 501.06, 0, 0, 0, 0, 62.69, 125.38, 187.84, 250.53, 313.22, 375.91, 438.37, 501.06, 0, 0, 0, 0, 62.69, 125.38, 187.84, 75.21, 94.04, 112.86, 131.61, 150.43, 0, 0, 0, 0, 18.82, 37.64, 56.39, 75.21, 94.04, 112.86, 131.61, 150.43, 0, 0, 0, 0, 18.82, 37.64, 56.39, 100.21, 125.29, 150.36, 175.35, 200.42, 0, 0, 0, 0, 25.08, 50.15, 75.14, 68.99, 86.26, 103.52, 120.72, 137.99, 0, 0, 0, 0, 17.26, 34.53, 51.73, 829.58, 1037.17, 1244.75, 1451.58, 1659.17, 0, 0, 0, 0, 207.58, 415.17, 622.0, 331.86, 414.89, 497.93, 580.67, 663.71, 0, 0, 0, 0, 83.04, 166.08, 248.82, 717.93, 897.57, 1077.21, 1256.21, 1435.86, 0, 0, 0, 0, 179.64, 359.29, 538.28, 494.84, 618.66, 742.48, 865.86, 989.68, 0, 0, 0, 0, 123.82, 247.64, 371.02, 1295.31, 1619.43, 1943.55, 2266.51, 2590.63, 0, 0, 0, 0, 324.12, 648.24, 971.19, 1252.87, 1566.38, 1879.88, 2192.25, 2505.75, 0, 0, 0, 0, 313.5, 627.0, 939.37, 995.46, 1244.54, 1493.63, 1741.82, 1990.91, 0, 0, 0, 0, 249.09, 498.18, 746.37, 497.73, 622.27, 746.82, 870.91, 995.46, 0, 0, 0, 0, 124.54, 249.09, 373.18, 315.3, 394.2, 473.09, 551.71, 630.6, 0, 0, 0, 0, 78.9, 157.79, 236.41, 414.85, 518.65, 622.46, 725.89, 829.69, 0, 0, 0, 0, 103.81, 207.61, 311.04, 331.86, 414.89, 497.93, 580.67, 663.71, 0, 0, 0, 0, 83.04, 166.08, 248.82, 64.33, 80.42, 96.52, 112.56, 128.65, 0, 0, 0, 0, 16.1, 32.19, 48.23, 331.86, 414.89, 497.93, 580.67, 663.71, 0, 0, 0, 0, 83.04, 166.08, 248.82, 97.43, 121.82, 146.2, 170.49, 194.87, 0, 0, 0, 0, 24.38, 48.76, 73.05, 331.86, 414.89, 497.93, 580.67, 663.71, 0, 0, 0, 0, 83.04, 166.08, 248.82, 2645.96, 3308.04, 3970.13, 4629.83, 5291.91, 0, 0, 0, 0, 662.08, 1324.17, 1983.87, 331.86, 414.89, 497.93, 580.67, 663.71, 0, 0, 0, 0, 83.04, 166.08, 248.82, 331.86, 414.89, 497.93, 580.67, 663.71, 0, 0, 0, 0, 83.04, 166.08, 248.82, 1177.66, 1472.34, 1767.02, 2060.64, 2355.32, 0, 0, 0, 0, 294.68, 589.36, 882.98]

function eval_func(X::Vector{Float64})
                return -.5*X[901]-.5*X[902]-.5*X[903]-.5*X[904]-.5*X[905]-.5*X[906]-.5*X[907]-.5*X[908]-.5*X[909]-.5*X[910]-.5*X[911]-.5*X[912]-.5*X[913]-.5*X[914]-.5*X[915]-.5*X[916]-.5*X[917]-.5*X[918]-.5*X[919]-.5*X[920]-.5*X[921]-.5*X[922]-.5*X[923]-.5*X[924]-.5*X[925]-.5*X[926]-.5*X[927]-.5*X[928]-.5*X[929]-.5*X[930]-.5*X[931]-.5*X[932]-.5*X[933]-.5*X[934]-.5*X[935]-.5*X[936]-.5*X[937]-.5*X[938]-.5*X[939]-.5*X[940]-.5*X[941]-.5*X[942]-.5*X[943]-.5*X[944]-.5*X[945]-.5*X[946]-.5*X[947]-.5*X[948]-.5*X[949]-.5*X[950]-.5*X[951]-.5*X[952]-.5*X[953]-.5*X[954]-.5*X[955]-.5*X[956]-.5*X[957]-.5*X[958]-.5*X[959]-.5*X[960]-.5*X[961]-.5*X[962]-.5*X[963]-.5*X[964]-.5*X[965]-.5*X[966]-.5*X[967]-.5*X[968]-.5*X[969]-.5*X[970]-.5*X[971]-.5*X[972]-.5*X[973]-.5*X[974]-.5*X[975]-.5*X[976]-.5*X[977]-.5*X[978]-.5*X[979]-.5*X[980]-.5*X[981]-.5*X[982]-.5*X[983]-.5*X[984]-.5*X[1057]-.5*X[1058]-.5*X[1059]-.5*X[1060]-.5*X[1061]-.5*X[1062]-.5*X[1063]-.5*X[1064]-.5*X[1065]-.5*X[1066]-.5*X[1067]-.5*X[1068]-.5*X[1069]-.5*X[1070]-.5*X[1071]-.5*X[1072]-.5*X[1073]-.5*X[1074]-.5*X[1075]-.5*X[1076]-.5*X[1077]-.5*X[1078]-.5*X[1079]-.5*X[1080]-.5*X[1081]
            end

operators = Dict{Operator,Integer}(UniformMutation() => 15,
                                BoundaryMutation() => 15,
                                NonUniformMutation() => 15,
                                WholeNonUniformMutation() => 10,
                                ArithmeticalCrossover() => 40,
                                SimpleCrossover() => 40,
                                HeuristicCrossover() => 40)


spec_dummy = GenocopSpecification(eval_func, equalities, equalities_right, inequalities, inequalities_right, lower_bounds, upper_bounds; max_iterations = 3,
                        starting_population_type=single_point_start_pop, minmax = minimization, starting_point = starting_point)
end
spec = GenocopSpecification(eval_func, equalities, equalities_right, inequalities, inequalities_right, lower_bounds, upper_bounds; max_iterations = 6000, cumulative_prob_coeff = 0.018,
                        starting_population_type=single_point_start_pop, operator_mapping=operators, population_size=400, minmax = minimization, starting_point = starting_point)

#genocop(spec_dummy)
best = @time genocop(spec)
#println("best: $best")
best_eval = eval_func(best)
println("best fitness: $best_eval")


# @profile genocop(spec_dummy)

# Profile.clear()
# Profile.init(10^7, 0.001)
# @profile (genocop(spec))
# using ProfileView
# ProfileView.view()

# readline(STDIN)


print("\n\n\n")

end

test()






